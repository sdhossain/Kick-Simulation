from force_length import force_length_tendon

class HillTypeMuscle:
    """
    Damped Hill-type muscle model adapted from Millard et al. (2013). The
    dynamic model is defined in terms of normalized length and velocity.
    To model a particular muscle, scale factors are needed for force, CE
    length, and SE length.
    """
    
    def __init__(self, f0M, resting_length_muscle, resting_length_tendon):

        self.resting_length_muscle = resting_length_muscle
        self.resting_length_tendon = resting_length_tendon
        self.f0M = f0M
        
    def norm_tendon_length(self, muscle_tendon_length, normalized_muscle_length):
        """
        Calculate the normalized length of the tendon.

        :param muscle_tendon_length: length of muscle tendon (unnormalized)
        :param normalized_muscle_length: normalized CE element length
        :return norm_tendon_length: normalized tendon length (SE)
        """

        return (
            muscle_tendon_length \
                - self.resting_length_muscle * normalized_muscle_length
            ) / self.resting_length_tendon
    
    def get_force(self, total_length, norm_muscle_length):
        """
        Calculate muscle tension (N).

        :param total_length: length of muscle tendon (unnormalized)
        :param norm_muscle_length: normalized CE element length
        :return force: tension in/generated by muscle
        """

        normalized_tendon_length = self.norm_tendon_length(
                                    total_length, norm_muscle_length
                                    )

        return self.f0M * force_length_tendon(normalized_tendon_length)